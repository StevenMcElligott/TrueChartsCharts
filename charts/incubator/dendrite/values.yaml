image:
  repository: ghcr.io/matrix-org/dendrite-monolith
  pullPolicy: IfNotPresent
  tag: v0.13.6@sha256:854e156339fcfcf5524290caaec8e2509911bf21e0f0edc7f2d4b25b0cd2eadc

securityContext:
  container:
    readOnlyRootFilesystem: false
    runAsUser: 0
    runAsGroup: 0

service:
  main:
    ports:
      main:
        protocol: http
        port: 8008
  service:
    enabled: true
    ports:
      service:
        enabled: true
        protocol: http
        port: 8448

workload:
  main:
    podSpec:
      initContainers:
        init-config:
          enabled: true
          imageSelector: image
          type: init
          envFrom:
            - configMapRef:
                name: dendrite-env
          command:
            - /bin/sh
            - -c
          args:
            - >
              if [ -f /etc/dendrite/dendrite.yaml ] || [ ${USE_CUSTOM_CONFIG_FILE} == true ]; then
                echo "Initial configuration exists or User selected to use custom configuration file. Skipping...";
              else
                echo "Creating initial configuration";
                touch /etc/dendrite/dendrite.yaml;
                echo "# Configuration bellow will be always be overridden" >> /etc/dendrite/dendrite.yaml;
                echo "# from environment settings on the Scale Apps UI." >> /etc/dendrite/dendrite.yaml;
                echo "# You however will not see this values change in the file." >> /etc/dendrite/dendrite.yaml;
                echo "# It's a generated file based on the values provided on initial install." >> /etc/dendrite/dendrite.yaml;
                echo "##########################################################" >> /etc/dendrite/dendrite.yaml;
                echo "version: 2" >> /etc/dendrite/dendrite.yaml;
                echo "global:" >> /etc/dendrite/dendrite.yaml;
                echo "  server_name: $DENDRITE_SERVER_NAME" >> /etc/dendrite/dendrite.yaml;
                echo "" >> /etc/dendrite/dendrite.yaml;
                echo "  private_key: matrix_key.pem" >> /etc/dendrite/dendrite.yaml
                echo "  old_private_keys:" >> /etc/dendrite/dendrite.yaml;
                echo "" >> /etc/dendrite/dendrite.yaml;
                echo "  key_validity_period: $DENDRITE_KEY_VALIDITY" >> /etc/dendrite/dendrite.yaml;
                echo "" >> /etc/dendrite/dendrite.yaml;
                echo "  database:" >> /etc/dendrite/dendrite.yaml;
                echo "    connection_string: $DENDRITE_POSTGRES_STRING" >> /etc/dendrite/dendrite.yaml;
                echo "    max_open_conns: $DENDRITE_POSTGRES_OPEN_CONNS" >> /etc/dendrite/dendrite.yaml;
                echo "    conn_max_lifetime: $DENDRITE_POSTGRES_CONN_LIFETIME" >> /etc/dendrite/dendrite.yaml;
                echo "" >> /etc/dendrite/dendrite.yaml;
                echo "  cache:" >> /etc/dendrite/dendrite.yaml;
                echo "    max_size_estimated: $DENDRITE_CACHE_MAX_SIZE" >> /etc/dendrite/dendrite.yaml;
                echo "" >> /etc/dendrite/dendrite.yaml;
                echo "    max_age: $DENDRITE_CACHE_MAX_AGE" >> /etc/dendrite/dendrite.yaml;
                echo "" >> /etc/dendrite/dendrite.yaml;
                echo "  well_known_server_name: $DENDRITE_WELL_KNOWN_SERVER_NAME" >> /etc/dendrite/dendrite.yaml;
                echo "" >> /etc/dendrite/dendrite.yaml;
                echo "  well_known_client_name: $DENDRITE_WELL_KNOWN_CLIENT_NAME" >> /etc/dendrite/dendrite.yaml;
                echo "" >> /etc/dendrite/dendrite.yaml;
                echo "  well_known_sliding_sync_proxy: $DENDRITE_WELL_KNOWN_SYNC_PROXY" >> /etc/dendrite/dendrite.yaml;
                echo "" >> /etc/dendrite/dendrite.yaml;
                echo "  trusted_third_party_id_servers:" >> /etc/dendrite/dendrite.yaml;
                echo "    - matrix.org" >> /etc/dendrite/dendrite.yaml;
                echo "    - vector.im" >> /etc/dendrite/dendrite.yaml;
                echo "" >> /etc/dendrite/dendrite.yaml;
                echo "  disable_federation: $DENDRITE_DISABLE_FEDERATION" >> /etc/dendrite/dendrite.yaml;
                echo "" >> /etc/dendrite/dendrite.yaml;
                echo "  presence:" >> /etc/dendrite/dendrite.yaml;
                echo "    enable_inbound: $DENDRITE_PRESENCE_INBOUND" >> /etc/dendrite/dendrite.yaml;
                echo "    enable_outbound: $DENDRITE_PRESENCE_OUTBOUND" >> /etc/dendrite/dendrite.yaml;
                echo "" >> /etc/dendrite/dendrite.yaml;
                echo "  report_stats" >> /etc/dendrite/dendrite.yaml;
                echo "    enabled: $DENDRITE_REPORT_STATS" >> /etc/dendrite/dendrite.yaml;
                echo "    endpoint: https://panopticon.matrix.org/push" >> /etc/dendrite/dendrite.yaml;
                echo "" >> /etc/dendrite/dendrite.yaml;
                echo "  server_notices:" >> /etc/dendrite/dendrite.yaml;
                echo "    enabled: false" >> /etc/dendrite/dendrite.yaml;
                echo "    local_part: "_server" >> /etc/dendrite/dendrite.yaml;
                echo "    display_name: "Server Alerts" >> /etc/dendrite/dendrite.yaml;
                echo "    avatar_url: "" >> /etc/dendrite/dendrite.yaml;
                echo "    room_name: "Server Alerts" >> /etc/dendrite/dendrite.yaml;
                echo "" >> /etc/dendrite/dendrite.yaml;
                echo "  jetstream:" >> /etc/dendrite/dendrite.yaml;
                echo "    addresses:" >> /etc/dendrite/dendrite.yaml;
                echo "    # - localhost:4222" >> /etc/dendrite/dendrite.yaml;
                echo "    storage_path: /var/dendrite/jetstream" >> /etc/dendrite/dendrite.yaml;
                echo "    topic_prefix: Dendrite" >> /etc/dendrite/dendrite.yaml;
                echo "  metrics:" >> /etc/dendrite/dendrite.yaml;
                echo "    enabled: $DENDRITE_METRICS_ENABLED" >> /etc/dendrite/dendrite.yaml;
                echo "    basic_auth:" >> /etc/dendrite/dendrite.yaml;
                echo "      username: metrics /var/dendrite/jetstream" >> /etc/dendrite/dendrite.yaml;
                echo "      password: metrics" >> /etc/dendrite/dendrite.yaml;
                echo "  dns_cache:" >> /etc/dendrite/dendrite.yaml;
                echo "     enabled: $DENDRITE_DNS_CACHE_ENABLED" >> /etc/dendrite/dendrite.yaml;
                echo "     cache_size: $DENDRITE_DNS_CACHE_SIZE" >> /etc/dendrite/dendrite.yaml;
                echo "     cache_lifetime: $DENDRITE_DNS_CACHE_LIFETIME" >> /etc/dendrite/dendrite.yaml;
                echo "app_service_api:" >> /etc/dendrite/dendrite.yaml;
                echo "  legacy_auth: $DENDRITE_LEGACY_AUTH" >> /etc/dendrite/dendrite.yaml;
                echo "  legacy_paths: $DENDRITE_LEGARY_PATHS" >> /etc/dendrite/dendrite.yaml;
                echo "  config_files: $DENDRITE_APPSERVICE_CONFIG_FILES" >> /etc/dendrite/dendrite.yaml;
                echo "" >> /etc/dendrite/dendrite.yaml;
                echo "client_api:" >> /etc/dendrite/dendrite.yaml;
                echo "  registration_disabled: $DENDRITE_REGISTRATION_DISABLED" >> /etc/dendrite/dendrite.yaml;
                echo "  guest_disabled: $DENDRITE_GUEST_DISABLED" >> /etc/dendrite/dendrite.yaml;
                echo "  registration_shared_secret: $DENDRITE_REGISTRATION_SHARED_SECRET" >> /etc/dendrite/dendrite.yaml;
                echo "  enable_registration_captcha: $DENDRITE_REGISTRATION_CAPTCHA" >> /etc/dendrite/dendrite.yaml;
                echo "  recaptcha_public_key: $DENDRITE_RECAPTCHA_PUBLIC_KEY" >> /etc/dendrite/dendrite.yaml;
                echo "  recaptcha_private_key: $DENDRITE_RECAPTCHA_PRIVATE_KEY" >> /etc/dendrite/dendrite.yaml;
                echo "  recaptcha_bypass_secret: $DENDRITE_BYPASS_SECRET" >> /etc/dendrite/dendrite.yaml;
                echo "" >> /etc/dendrite/dentrite.yaml;
                echo "  turn:" >> /etc/dendrite/dendrite.yaml;
                echo "    turn_user_lifetime: $DENDRITE_TURN_USER_LIFETIME" >> /etc/dendrite/dendrite.yaml;
                echo "    turn_uris:" >> /etc/dendrite/dendrite.yaml; >> /etc/dendrite/dendrite.yaml;
                echo "      - turn:$DENDRITE_TURN_SERVER_TCP" >> /etc/dendrite/dendrite.yaml;
                echo "      - turn:$DENDRITE_TURN_SERVER_UDP" >> /etc/dendrite/dendrite.yaml;
                echo "    turn_shared_secret" >> /etc/dendrite/dendrite.yaml;
                echo "" >> /etc/dendrite/dentrite.yaml;
                echo "  rate_limiting:" >> /etc/dendrite/dendrite.yaml;
                echo "    enabled: $DENDRITE_RATE_LIMITING" >> /etc/dendrite/dendrite.yaml;
                echo "    threshold: $DENDRITE_RATE_THRESHOLD" >> /etc/dendrite/dendrite.yaml;
                echo "    cooloff_ms: $DENDRITE_RATE_COOLOFF" >> /etc/dendrite/dendrite.yaml;
                echo "    exempt_user_ids: $DENDRITE_RATE_EXEMPTS_IDS" >> /etc/dendrite/dendrite.yaml;
                echo "" >> /etc/dendrite/dendrite.yaml
                echo "federation_api:" >> /etc/dendrite/dendrite.yaml
                echo "  send_max_retries: $DENDRITE_FEDERATION_MAX_RETRIES" >> /etc/dendrite/dendrite.yaml;
                echo ""  >> /etc/dendrite/dendrite.yaml;
                echo "  disable_tls_validation: $DENDRITE_FEDERATION_DISABLE_TLS"  >> /etc/dendrite/dendrite.yaml;
                echo "" >> /etc/dendrite/dendrite.yaml;
                echo "  disable_http_keepalives: $DENDRITE_FEDERATION_HTTP_KEEPALIVES" >> /etc/dendrite/dendrite.yaml;
                echo "" >> /etc/dendrite/dendrite.yaml;
                echo "  key_perspectives:" >> /etc/dendrite/dendrite.yaml;
                echo "   - server_name: matrix.org" >> /etc/dendrite/dendrite.yaml;
                echo "     keys:" >> /etc/dendrite/dendrite.yaml;
                echo "       - key_id: ed25519:auto" >> /etc/dendrite/dendrite.yaml;
                echo "         public_key: Noi6WqcDj0QmPxCNQqgezwTlBKrfqehY1u2FyWP9uYw" >> /etc/dendrite/dendrite.yaml
                echo "       - key_id: ed25519:a_RXGa" >> /etc/dendrite/dendrite.yaml;
                echo "         public_key: l8Hft5qXKn1vfHrg3p4+W8gELQVo8N13JkluMfmn2sQ" >> /etc/dendrite/dendrite.yaml
                echo "" >> /etc/dendrite/dendrite.yaml
                echo "  prefer_direct_fetch: $DENDRITE_FEDERATION_DIRECT_FETCH" >> /etc/dendrite/dendrite.yaml
                echo "" >> /etc/dendrite/dendrite.yaml
                echo "media_api:" >> /etc/dendrite/dendrite.yaml
                echo "" >> /etc/dendrite/dendrite.yaml
                echo "  base_path: /var/dendrite/media >> /etc/dendrite/dendrite.yaml
                echo "" >> /etc/dendrite/dendrite.yaml
                echo "  max_file_size_bytes: $DENDRITE_MEDIA_MAX_FILESIZE" >> /etc/dendrite/dendrite.yaml
                echo "" >> /etc/dendrite/dendrite.yaml
                echo "  dynamic_thumbnails: $DENDRITE_DYNAMIC_THUMBNAILS" >> /etc/dendrite/dendrite.yaml
                echo "" >> /etc/dendrite/dendrite.yaml
                echo "  max_thumbnail_generators: $DENDRITE_MAX_THUMB_GENERATORS" >> /etc/dendrite/dendrite.yaml
                echo "" >> /etc/dendrite/dendrite.yaml
                echo "  thumbnail_sizes:" >> /etc/dendrite/dendrite.yaml
                echo "    - width: 32" >> /etc/dendrite/dendrite.yaml
                echo "      height: 32" >> /etc/dendrite/dendrite.yaml
                echo "      method: crop" >> /etc/dendrite/dendrite.yaml
                echo "    - width: 96" >> /etc/dendrite/dendrite.yaml
                echo "      height: 96" >> /etc/dendrite/dendrite.yaml
                echo "      method: crop" >> /etc/dendrite/dendrite.yaml
                echo "    - width: 640" >> /etc/dendrite/dendrite.yaml
                echo "      height: 480" >> /etc/dendrite/dendrite.yaml
                echo "      method: scale" >> /etc/dendrite/dendrite.yaml
                echo "" >> /etc/dendrite/dendrite.yaml
                echo "mscs:" >> /etc/dendrite/dendrite.yaml
                echo "  mscs:" >> /etc/dendrite/dendrite.yaml
                echo "#    - msc2836" >> /etc/dendrite/dendrite.yaml
                echo "" >> /etc/dendrite/dendrite.yaml
                echo "sync_api:" >> /etc/dendrite/dendrite.yaml
                echo "  real_ip_header: X-Real-IP" >> /etc/dendrite/dendrite.yaml
                echo "" >> /etc/dendrite/dendrite.yaml
                echo "  search:" >> /etc/dendrite/dendrite.yaml
                echo "    enabled: $DENDRITE_ENABLE_SEARCH" >> /etc/dendrite/dendrite.yaml
                echo ""
                echo "    index_path: /var/dendrite/searchindex" >> /etc/dendrite/dendrite.yaml
                echo "" >> /etc/dendrite/dendrite.yaml
                echo "    language: $DENDRITE_SEARCH_LANG" >> /etc/dendrite/dendrite.yaml
                echo "" >> /etc/dendrite/dendrite.yaml
                echo "user_api:" >> /etc/dendrite/dendrite.yaml
                echo "  bcrypt_cost: $DENDRITE_USER_BCRYPT_COST" >> /etc/dendrite/dendrite.yaml
                echo ""  >> /etc/dendrite/dendrite.yaml
                echo "  auto_join_room:" >> /etc/dendrite/dendrite.yaml
                echo "#" >> /etc/dendrite/dendrite.yaml
                echo "" >> /etc/dendrite/dendrite.yaml
                echo "tracing:" >> /etc/dendrite/dendrite.yaml
                echo "  enabled: false" >> /etc/dendrite/dendrite.yaml
                echo "" >> /etc/dendrite/dendrite.yaml
                echo "logging:" >> /etc/dendrite/dendrite.yaml
                echo "  - type: std" >> /etc/dendrite/dendrite.yaml
                echo "    level: info" >> /etc/dendrite/dendrite.yaml
                echo "  - type: file" >> /etc/dendrite/dendrite.yaml
                echo "    level: info" >> /etc/dendrite/dendrite.yaml
                echo "    params:" >> /etc/dendrite/dendrite.yaml
                echo "      path: ./logs" >> /etc/dendrite/dendrite.yaml
                echo "##########################################################" >> /etc/dendrite/dendrite.yaml;
                echo 'Initial configuration file created at "/etc/dendrite/dendrite.yaml"';
              fi;
      containers:
        main:
          probes:
            liveness:
              type: tcp
              port: /
            readiness:
              type: tcp
              port: /
            startup:
              type: tcp
              port: /

persistence:
  config:
    enabled: true
    mountPath: /etc/dendrite
  media:
    enabled: true
    mountPath: /var/dendrite/media
  jetstream:
    enabled: true
    mountPath: /var/dendrite/jetstream
  dendrite_search_index:
    enabled: true
    mountPath: /var/dendrite/searchindex

    # Enabled postgres
cnpg:
  main:
    enabled: true
    user: dendrite
    database: dendrite

portal:
  open:
    enabled: true
